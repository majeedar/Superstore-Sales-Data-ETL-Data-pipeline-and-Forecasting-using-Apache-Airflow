[2025-03-29T05:26:12.765+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2025-03-29T05:26:12.799+0000] {taskinstance.py:2612} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: forecast_sales_dag.load_data_to_prod_db manual__2025-03-29T05:15:55.768943+00:00 [queued]>
[2025-03-29T05:26:12.813+0000] {taskinstance.py:2612} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: forecast_sales_dag.load_data_to_prod_db manual__2025-03-29T05:15:55.768943+00:00 [queued]>
[2025-03-29T05:26:12.815+0000] {taskinstance.py:2865} INFO - Starting attempt 2 of 2
[2025-03-29T05:26:12.853+0000] {taskinstance.py:2888} INFO - Executing <Task(PythonOperator): load_data_to_prod_db> on 2025-03-29 05:15:55.768943+00:00
[2025-03-29T05:26:12.863+0000] {standard_task_runner.py:72} INFO - Started process 1407 to run task
[2025-03-29T05:26:12.869+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'forecast_sales_dag', 'load_data_to_prod_db', 'manual__2025-03-29T05:15:55.768943+00:00', '--job-id', '246', '--raw', '--subdir', 'DAGS_FOLDER/forecast_etl.py', '--cfg-path', '/tmp/tmpuza6__n4']
[2025-03-29T05:26:12.873+0000] {standard_task_runner.py:105} INFO - Job 246: Subtask load_data_to_prod_db
[2025-03-29T05:26:12.961+0000] {task_command.py:467} INFO - Running <TaskInstance: forecast_sales_dag.load_data_to_prod_db manual__2025-03-29T05:15:55.768943+00:00 [running]> on host 2eb76630dc09
[2025-03-29T05:26:13.086+0000] {taskinstance.py:3131} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='forecast_sales_dag' AIRFLOW_CTX_TASK_ID='load_data_to_prod_db' AIRFLOW_CTX_EXECUTION_DATE='2025-03-29T05:15:55.768943+00:00' AIRFLOW_CTX_TRY_NUMBER='2' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-03-29T05:15:55.768943+00:00'
[2025-03-29T05:26:13.090+0000] {logging_mixin.py:190} INFO - Task instance is in running state
[2025-03-29T05:26:13.092+0000] {logging_mixin.py:190} INFO -  Previous state of the Task instance: queued
[2025-03-29T05:26:13.094+0000] {logging_mixin.py:190} INFO - Current task name:load_data_to_prod_db state:running start_date:2025-03-29 05:26:12.802722+00:00
[2025-03-29T05:26:13.095+0000] {logging_mixin.py:190} INFO - Dag name:forecast_sales_dag and current dag run status:running
[2025-03-29T05:26:13.097+0000] {taskinstance.py:731} INFO - ::endgroup::
[2025-03-29T05:26:13.132+0000] {warnings.py:109} WARNING - /opt/***/dags/forecast_etl.py:69: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  forecast_metrics_df = pd.read_json(forecast_metrics_json, orient='records')

[2025-03-29T05:26:13.147+0000] {taskinstance.py:3310} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/models/taskinstance.py", line 767, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/models/taskinstance.py", line 733, in _execute_callable
    return ExecutionCallableRunner(
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/utils/operator_helpers.py", line 252, in run
    return self.func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/models/baseoperator.py", line 406, in wrapper
    return func(self, *args, **kwargs)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/operators/python.py", line 238, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/operators/python.py", line 256, in execute_callable
    return runner.run(*self.op_args, **self.op_kwargs)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/utils/operator_helpers.py", line 252, in run
    return self.func(*args, **kwargs)
  File "/opt/airflow/dags/forecast_etl.py", line 72, in load_data_to_prod_db
    past_future_sales_df['Order Date'] = pd.to_datetime(past_future_sales_df['Order Date'], format='%d/%m/%Y')
  File "/home/airflow/.local/lib/python3.9/site-packages/pandas/core/tools/datetimes.py", line 1112, in to_datetime
    values = convert_listlike(arg._values, format)
  File "/home/airflow/.local/lib/python3.9/site-packages/pandas/core/tools/datetimes.py", line 488, in _convert_listlike_datetimes
    return _array_strptime_with_fallback(arg, name, utc, format, exact, errors)
  File "/home/airflow/.local/lib/python3.9/site-packages/pandas/core/tools/datetimes.py", line 519, in _array_strptime_with_fallback
    result, timezones = array_strptime(arg, fmt, exact=exact, errors=errors, utc=utc)
  File "strptime.pyx", line 534, in pandas._libs.tslibs.strptime.array_strptime
  File "strptime.pyx", line 355, in pandas._libs.tslibs.strptime.array_strptime
ValueError: time data "2017-12-31" doesn't match format "%d/%m/%Y", at position 1237. You might want to try:
    - passing `format` if your strings have a consistent format;
    - passing `format='ISO8601'` if your strings are all ISO8601 but not necessarily in exactly the same format;
    - passing `format='mixed'`, and the format will be inferred for each element individually. You might want to use `dayfirst` alongside this.
[2025-03-29T05:26:13.160+0000] {logging_mixin.py:190} INFO - Task instance in failure state
[2025-03-29T05:26:13.162+0000] {logging_mixin.py:190} INFO - Task start:2025-03-29 05:26:12.802722+00:00 end:2025-03-29 05:26:13.159917+00:00 duration:0.357195
[2025-03-29T05:26:13.163+0000] {logging_mixin.py:190} INFO - Task:<Task(PythonOperator): load_data_to_prod_db> dag:<DAG: forecast_sales_dag> dagrun:<DagRun forecast_sales_dag @ 2025-03-29 05:15:55.768943+00:00: manual__2025-03-29T05:15:55.768943+00:00, state:running, queued_at: 2025-03-29 05:15:55.783907+00:00. externally triggered: True>
[2025-03-29T05:26:13.165+0000] {logging_mixin.py:190} INFO - Failure caused by time data "2017-12-31" doesn't match format "%d/%m/%Y", at position 1237. You might want to try:
    - passing `format` if your strings have a consistent format;
    - passing `format='ISO8601'` if your strings are all ISO8601 but not necessarily in exactly the same format;
    - passing `format='mixed'`, and the format will be inferred for each element individually. You might want to use `dayfirst` alongside this.
[2025-03-29T05:26:13.168+0000] {taskinstance.py:1225} INFO - Marking task as FAILED. dag_id=forecast_sales_dag, task_id=load_data_to_prod_db, run_id=manual__2025-03-29T05:15:55.768943+00:00, execution_date=20250329T051555, start_date=20250329T052612, end_date=20250329T052613
[2025-03-29T05:26:13.206+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2025-03-29T05:26:13.209+0000] {standard_task_runner.py:124} ERROR - Failed to execute job 246 for task load_data_to_prod_db (time data "2017-12-31" doesn't match format "%d/%m/%Y", at position 1237. You might want to try:
    - passing `format` if your strings have a consistent format;
    - passing `format='ISO8601'` if your strings are all ISO8601 but not necessarily in exactly the same format;
    - passing `format='mixed'`, and the format will be inferred for each element individually. You might want to use `dayfirst` alongside this.; 1407)
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/task/task_runner/standard_task_runner.py", line 117, in _start_by_fork
    ret = args.func(args, dag=self.dag)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/cli/cli_config.py", line 49, in command
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/utils/cli.py", line 115, in wrapper
    return f(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/cli/commands/task_command.py", line 483, in task_run
    task_return_code = _run_task_by_selected_method(args, _dag, ti)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/cli/commands/task_command.py", line 256, in _run_task_by_selected_method
    return _run_raw_task(args, ti)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/cli/commands/task_command.py", line 341, in _run_raw_task
    return ti._run_raw_task(
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/models/taskinstance.py", line 3004, in _run_raw_task
    return _run_raw_task(
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/models/taskinstance.py", line 273, in _run_raw_task
    TaskInstance._execute_task_with_callbacks(
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/models/taskinstance.py", line 3158, in _execute_task_with_callbacks
    result = self._execute_task(context, task_orig)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/models/taskinstance.py", line 3182, in _execute_task
    return _execute_task(self, context, task_orig)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/models/taskinstance.py", line 767, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/models/taskinstance.py", line 733, in _execute_callable
    return ExecutionCallableRunner(
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/utils/operator_helpers.py", line 252, in run
    return self.func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/models/baseoperator.py", line 406, in wrapper
    return func(self, *args, **kwargs)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/operators/python.py", line 238, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/operators/python.py", line 256, in execute_callable
    return runner.run(*self.op_args, **self.op_kwargs)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/utils/operator_helpers.py", line 252, in run
    return self.func(*args, **kwargs)
  File "/opt/airflow/dags/forecast_etl.py", line 72, in load_data_to_prod_db
    past_future_sales_df['Order Date'] = pd.to_datetime(past_future_sales_df['Order Date'], format='%d/%m/%Y')
  File "/home/airflow/.local/lib/python3.9/site-packages/pandas/core/tools/datetimes.py", line 1112, in to_datetime
    values = convert_listlike(arg._values, format)
  File "/home/airflow/.local/lib/python3.9/site-packages/pandas/core/tools/datetimes.py", line 488, in _convert_listlike_datetimes
    return _array_strptime_with_fallback(arg, name, utc, format, exact, errors)
  File "/home/airflow/.local/lib/python3.9/site-packages/pandas/core/tools/datetimes.py", line 519, in _array_strptime_with_fallback
    result, timezones = array_strptime(arg, fmt, exact=exact, errors=errors, utc=utc)
  File "strptime.pyx", line 534, in pandas._libs.tslibs.strptime.array_strptime
  File "strptime.pyx", line 355, in pandas._libs.tslibs.strptime.array_strptime
ValueError: time data "2017-12-31" doesn't match format "%d/%m/%Y", at position 1237. You might want to try:
    - passing `format` if your strings have a consistent format;
    - passing `format='ISO8601'` if your strings are all ISO8601 but not necessarily in exactly the same format;
    - passing `format='mixed'`, and the format will be inferred for each element individually. You might want to use `dayfirst` alongside this.
[2025-03-29T05:26:13.246+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 1
[2025-03-29T05:26:13.264+0000] {taskinstance.py:3900} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-03-29T05:26:13.287+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
